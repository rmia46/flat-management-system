// frontend/src/App.tsx
import React from 'react';
import { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';
import LoginPage from './pages/LoginPage';
import RegisterPage from './pages/RegisterPage';
import HomePage from './pages/HomePage';
import DashboardPage from './pages/DashboardPage';
import { AuthProvider, useAuth } from './context/AuthContext';

import './index.css'; // This now includes your base theme and font imports

// Component for the Navigation Bar
const NavBar: React.FC = () => {
  const { isAuthenticated, user, logout } = useAuth();

  return (
    <nav className="bg-secondaryBg shadow-md p-4 border-b border-borderGray"> {/* Updated background and border */}
      <div className="container mx-auto flex justify-between items-center">
        <Link to="/" className="text-xl font-bold text-accent"> {/* Accent color for logo */}
          Flat Manager
        </Link>
        <div className="flex items-center space-x-4"> {/* Added flex and space-x for spacing */}
          {isAuthenticated ? (
            <>
              <span className="text-secondaryText text-sm"> {/* Secondary text for welcome */}
                Welcome, {user?.firstName} ({user?.userType})
              </span>
              <Link to="/dashboard" className="px-4 py-2 rounded-md text-primaryText hover:text-accent transition duration-200">
                Dashboard
              </Link>
              <button
                onClick={logout}
                className="px-4 py-2 rounded-md bg-accent text-primaryText hover:bg-accentHover transition duration-200 font-medium"
              > {/* Accent button for logout */}
                Logout
              </button>
            </>
          ) : (
            <>
              <Link to="/login" className="px-4 py-2 rounded-md text-primaryText hover:text-accent transition duration-200">
                Login
              </Link>
              <Link to="/register" className="px-4 py-2 rounded-md bg-accent text-primaryText hover:bg-accentHover transition duration-200 font-medium">
                Register
              </Link>
            </>
          )}
        </div>
      </div>
    </nav>
  );
};

// Component to protect routes (redirects if not authenticated)
const PrivateRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const { isAuthenticated } = useAuth();
  const navigate = useNavigate();

  useEffect(() => {
    if (!isAuthenticated) {
      navigate('/login', { replace: true });
    }
  }, [isAuthenticated, navigate]);

  return isAuthenticated ? <>{children}</> : null;
};


function App() {
  return (
    <Router>
      <div className="min-h-screen flex flex-col font-light"> {/* Added font-light for thinness */}
        <NavBar />

        <main className="flex-grow container mx-auto p-4 flex items-center justify-center">
          <Routes>
            <Route path="/" element={<HomePage />} />
            <Route path="/login" element={<LoginPage />} />
            <Route path="/register" element={<RegisterPage />} />
            <Route path="/dashboard" element={
              <PrivateRoute>
                <DashboardPage />
              </PrivateRoute>
            } />
          </Routes>
        </main>

        <footer className="bg-secondaryBg p-4 text-center text-secondaryText border-t border-borderGray mt-auto"> {/* Updated colors */}
          <p>&copy; {new Date().getFullYear()} Flat Manager. All rights reserved.</p>
        </footer>
      </div>
    </Router>
  );
}

export default App;
